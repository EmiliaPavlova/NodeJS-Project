swagger: "2.0"
info:
  version: "0.0.1"
  title: Node.js Mentoring Program
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    # binds a127 app logic to a route
    # x-swagger-router-controller: hello_world
    get:
      description: Returns a random city
      operationId: randomCity
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/City"
  /api/users:
    get:
      description: Returns all users
      operationId: getUsers
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
  /api/users/{id}:
    delete:
      description: Deletes a user by id
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The id of the user to be deleted
          required: true
          type: string
      responses:
        "200":
          description: User deleted!
  /api/products:
    get:
      description: Returns all products
      operationId: getProducts
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Product"
    post:
      description: Adds a new product
      operationId: addProduct
      parameters:
        - name: name
          in: body
          description: The name of the product to be added
          required: true
          type: string
        - name: price
          in: body
          description: The price of the product to be added
          required: false
          type: number
          format: float
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Product"
  /api/products/{id}:
    get:
      description: Gets a product by id
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: The id of the product to show
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Product"
    delete:
      description: Deletes a product by id
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: The id of the product to be deleted
          required: true
          type: string
      responses:
        "200":
          description: Product deleted!
  /api/products/{id}/reviews:
    get:
      description: Gets all reviews for a product by id
      operationId: getProductReviews
      parameters:
        - name: id
          in: path
          description: The id of the product whom reviews to show
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Review"
  /api/cities:
    get:
      description: Returns all cities
      operationId: getCities
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/City"
    post:
      description: Adds a new city
      operationId: addCity
      parameters:
        - name: name
          in: body
          description: The name of the city to be added
          required: true
          type: string
        - name: country
          in: body
          description: The country of the city to be added
          required: true
          type: string
        - name: capital
          in: body
          description: Is the city to be added capical or not
          required: true
          type: boolean
        - name: location
          in: body
          description: The location of the city to be added
          required: false
          type: object
          properties:
            lat:
              type: number
              format: float
            long:
              type: number
              format: float
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Product"
  /api/cities/{id}:
    get:
      description: Gets a city by id
      operationId: getCityById
      parameters:
        - name: id
          in: path
          description: The id of the city to show
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/City"
    put:
      description: Updates a city by id
      operationId: updateCityById
      parameters:
        - name: id
          in: path
          description: The id of the city to update
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/City"
    delete:
      description: Deletes a city by id
      operationId: deleteCity
      parameters:
        - name: id
          in: path
          description: The id of the city to be deleted
          required: true
          type: string
      responses:
        "200":
          description: City deleted!

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    required:
      - name
    properties:
      name:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
  Product:
    required:
      - name
    properties:
      name:
        type: string
      price:
        type: number
        format: float
      lastModifiedDate:
        type: string
        format: date-time
  Review:
    required:
      - productId
      - content
    properties:
      productId:
        type: string
      content:
        type: string
  City:
    required:
      - name
      - country
      - capital
    properties:
      name:
        type: string
      country:
        type: string
      capital:
        type: boolean
      location:
        type: object
        properties:
          lat:
            type: number
            format: float
          long:
            type: number
            format: float
      lastModifiedDate:
        type: string
        format: date-time
